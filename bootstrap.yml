- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    # - name: Create EC2 key pair
    #   ec2_key:
    #     state: present
    #     region: "{{ aws_region }}"
    #     key_material: "{{ item }}"
    #   with_file: dcos_admin_key

    - name: Create Mesosphere DCOS cluster
      cloudformation:
        stack_name: "{{ dcos_cluster_name }}"
        state: present
        region: "{{ aws_region }}"
        template_url: "https://s3.amazonaws.com/nrgi-dcos/dcos-templates/{{ dcos_channel }}/{{ dcos_master_setup }}.json"
        template_parameters:
          AdminLocation: "{{ dcos_admin_location }}"
          KeyName: dcos-admin
          SlaveInstanceCount: "{{ dcos_worker_nodes }}"
          PublicSlaveInstanceCount: "{{ dcos_public_worker_nodes }}"
      register: dcos_stack

    - set_fact:
        dcos_url: "http://{{ dcos_stack.stack_outputs.DnsAddress }}"
        dcos_public_slave: "http://{{ dcos_stack.stack_outputs.PublicSlaveDnsAddress }}"
        dcos_url_update: "dualstack.{{ dcos_stack.stack_outputs.DnsAddress }}"
        dcos_public_update: "dualstack.{{ dcos_stack.stack_outputs.PublicSlaveDnsAddress }}"

    - name: Create tmp folder for DCOS CLI
      file: path=tmp/.dcos state=directory mode=0755

    - name: Generate DCOS CLI configuration
      template:
        src: templates/dcos.toml.j2
        dest: tmp/.dcos/dcos.toml

    - name: Generate URL configuration
      template:
        src: templates/urls.conf.tmpl
        dest: tmp/urls.conf

    - name: Generate DNS configuration
      template:
        src: templates/dns_change.json.tmpl
        dest: tmp/dns_change.json

    - name: Validate DCOS CLI configuration
      command: ./dcos config validate
      changed_when: False

    - name: Update elastic beanstalk
      command: aws route53 change-resource-record-sets --hosted-zone-id Z2PYZBK36FDXXD --change-batch file://./tmp/dns_change.json

